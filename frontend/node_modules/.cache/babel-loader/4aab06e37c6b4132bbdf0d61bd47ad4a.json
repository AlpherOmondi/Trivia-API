{"ast":null,"code":"var _jsxFileName = \"C:\\\\cd0037-API-Development-and-Documentation-project-main\\\\frontend\\\\src\\\\components\\\\QuestionView.js\";\nimport React, { Component } from 'react';\nimport '../stylesheets/App.css';\nimport Question from './Question';\nimport Search from './Search';\nimport $ from 'jquery';\n\nclass QuestionView extends Component {\n  constructor() {\n    super();\n\n    this.getQuestions = () => {\n      $.ajax({\n        url: `/questions?page=${this.state.page}`,\n        //TODO: update request URL\n        type: 'GET',\n        success: result => {\n          this.setState({\n            questions: result.questions,\n            totalQuestions: result.total_questions,\n            categories: result.categories,\n            currentCategory: result.current_category\n          });\n          return;\n        },\n        error: error => {\n          alert('Unable to load questions. Please try your request again');\n          return;\n        }\n      });\n    };\n\n    this.getByCategory = id => {\n      $.ajax({\n        url: `/categories/${id}/questions`,\n        //TODO: update request URL\n        type: 'GET',\n        success: result => {\n          this.setState({\n            questions: result.questions,\n            totalQuestions: result.total_questions,\n            currentCategory: result.current_category\n          });\n          return;\n        },\n        error: error => {\n          alert('Unable to load questions. Please try your request again');\n          return;\n        }\n      });\n    };\n\n    this.submitSearch = searchTerm => {\n      $.ajax({\n        url: `/questions`,\n        //TODO: update request URL\n        type: 'POST',\n        dataType: 'json',\n        contentType: 'application/json',\n        data: JSON.stringify({\n          searchTerm: searchTerm\n        }),\n        xhrFields: {\n          withCredentials: true\n        },\n        crossDomain: true,\n        success: result => {\n          this.setState({\n            questions: result.questions,\n            totalQuestions: result.total_questions,\n            currentCategory: result.current_category\n          });\n          return;\n        },\n        error: error => {\n          alert('Unable to load questions. Please try your request again');\n          return;\n        }\n      });\n    };\n\n    this.questionAction = id => action => {\n      if (action === 'DELETE') {\n        if (window.confirm('are you sure you want to delete the question?')) {\n          $.ajax({\n            url: `/questions/${id}`,\n            //TODO: update request URL\n            type: 'DELETE',\n            success: result => {\n              this.getQuestions();\n            },\n            error: error => {\n              alert('Unable to load questions. Please try your request again');\n              return;\n            }\n          });\n        }\n      }\n    };\n\n    this.state = {\n      questions: [],\n      page: 1,\n      totalQuestions: 0,\n      categories: {},\n      currentCategory: null\n    };\n  }\n\n  componentDidMount() {\n    this.getQuestions();\n  }\n\n  selectPage(num) {\n    this.setState({\n      page: num\n    }, () => this.getQuestions());\n  }\n\n  createPagination() {\n    let pageNumbers = [];\n    let maxPage = Math.ceil(this.state.totalQuestions / 10);\n\n    for (let i = 1; i <= maxPage; i++) {\n      pageNumbers.push( /*#__PURE__*/React.createElement(\"span\", {\n        key: i,\n        className: `page-num ${i === this.state.page ? 'active' : ''}`,\n        onClick: () => {\n          this.selectPage(i);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }, i));\n    }\n\n    return pageNumbers;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"categories-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      onClick: () => {\n        this.getQuestions();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }, \"Categories\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, Object.keys(this.state.categories).map(id => /*#__PURE__*/React.createElement(\"li\", {\n      key: id,\n      onClick: () => {\n        this.getByCategory(id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }, this.state.categories[id], /*#__PURE__*/React.createElement(\"img\", {\n      className: \"category\",\n      alt: `${this.state.categories[id].toLowerCase()}`,\n      src: `${this.state.categories[id].toLowerCase()}.svg`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(Search, {\n      submitSearch: this.submitSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"questions-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }\n    }, \"Questions\"), this.state.questions.map((q, ind) => /*#__PURE__*/React.createElement(Question, {\n      key: q.id,\n      question: q.question,\n      answer: q.answer,\n      category: this.state.categories[q.category],\n      difficulty: q.difficulty,\n      questionAction: this.questionAction(q.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pagination-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }\n    }, this.createPagination())));\n  }\n\n}\n\nexport default QuestionView;","map":{"version":3,"names":["React","Component","Question","Search","$","QuestionView","constructor","getQuestions","ajax","url","state","page","type","success","result","setState","questions","totalQuestions","total_questions","categories","currentCategory","current_category","error","alert","getByCategory","id","submitSearch","searchTerm","dataType","contentType","data","JSON","stringify","xhrFields","withCredentials","crossDomain","questionAction","action","window","confirm","componentDidMount","selectPage","num","createPagination","pageNumbers","maxPage","Math","ceil","i","push","render","Object","keys","map","toLowerCase","q","ind","question","answer","category","difficulty"],"sources":["C:/cd0037-API-Development-and-Documentation-project-main/frontend/src/components/QuestionView.js"],"sourcesContent":["import React, { Component } from 'react';\nimport '../stylesheets/App.css';\nimport Question from './Question';\nimport Search from './Search';\nimport $ from 'jquery';\n\nclass QuestionView extends Component {\n  constructor() {\n    super();\n    this.state = {\n      questions: [],\n      page: 1,\n      totalQuestions: 0,\n      categories: {},\n      currentCategory: null,\n    };\n  }\n\n  componentDidMount() {\n    this.getQuestions();\n  }\n\n  getQuestions = () => {\n    $.ajax({\n      url: `/questions?page=${this.state.page}`, //TODO: update request URL\n      type: 'GET',\n      success: (result) => {\n        this.setState({\n          questions: result.questions,\n          totalQuestions: result.total_questions,\n          categories: result.categories,\n          currentCategory: result.current_category,\n        });\n        return;\n      },\n      error: (error) => {\n        alert('Unable to load questions. Please try your request again');\n        return;\n      },\n    });\n  };\n\n  selectPage(num) {\n    this.setState({ page: num }, () => this.getQuestions());\n  }\n\n  createPagination() {\n    let pageNumbers = [];\n    let maxPage = Math.ceil(this.state.totalQuestions / 10);\n    for (let i = 1; i <= maxPage; i++) {\n      pageNumbers.push(\n        <span\n          key={i}\n          className={`page-num ${i === this.state.page ? 'active' : ''}`}\n          onClick={() => {\n            this.selectPage(i);\n          }}\n        >\n          {i}\n        </span>\n      );\n    }\n    return pageNumbers;\n  }\n\n  getByCategory = (id) => {\n    $.ajax({\n      url: `/categories/${id}/questions`, //TODO: update request URL\n      type: 'GET',\n      success: (result) => {\n        this.setState({\n          questions: result.questions,\n          totalQuestions: result.total_questions,\n          currentCategory: result.current_category,\n        });\n        return;\n      },\n      error: (error) => {\n        alert('Unable to load questions. Please try your request again');\n        return;\n      },\n    });\n  };\n\n  submitSearch = (searchTerm) => {\n    $.ajax({\n      url: `/questions`, //TODO: update request URL\n      type: 'POST',\n      dataType: 'json',\n      contentType: 'application/json',\n      data: JSON.stringify({ searchTerm: searchTerm }),\n      xhrFields: {\n        withCredentials: true,\n      },\n      crossDomain: true,\n      success: (result) => {\n        this.setState({\n          questions: result.questions,\n          totalQuestions: result.total_questions,\n          currentCategory: result.current_category,\n        });\n        return;\n      },\n      error: (error) => {\n        alert('Unable to load questions. Please try your request again');\n        return;\n      },\n    });\n  };\n\n  questionAction = (id) => (action) => {\n    if (action === 'DELETE') {\n      if (window.confirm('are you sure you want to delete the question?')) {\n        $.ajax({\n          url: `/questions/${id}`, //TODO: update request URL\n          type: 'DELETE',\n          success: (result) => {\n            this.getQuestions();\n          },\n          error: (error) => {\n            alert('Unable to load questions. Please try your request again');\n            return;\n          },\n        });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div className='question-view'>\n        <div className='categories-list'>\n          <h2\n            onClick={() => {\n              this.getQuestions();\n            }}\n          >\n            Categories\n          </h2>\n          <ul>\n            {Object.keys(this.state.categories).map((id) => (\n              <li\n                key={id}\n                onClick={() => {\n                  this.getByCategory(id);\n                }}\n              >\n                {this.state.categories[id]}\n                <img\n                  className='category'\n                  alt={`${this.state.categories[id].toLowerCase()}`}\n                  src={`${this.state.categories[id].toLowerCase()}.svg`}\n                />\n              </li>\n            ))}\n          </ul>\n          <Search submitSearch={this.submitSearch} />\n        </div>\n        <div className='questions-list'>\n          <h2>Questions</h2>\n          {this.state.questions.map((q, ind) => (\n            <Question\n              key={q.id}\n              question={q.question}\n              answer={q.answer}\n              category={this.state.categories[q.category]}\n              difficulty={q.difficulty}\n              questionAction={this.questionAction(q.id)}\n            />\n          ))}\n          <div className='pagination-menu'>{this.createPagination()}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default QuestionView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}